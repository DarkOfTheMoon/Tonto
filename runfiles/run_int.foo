! Copyright (C) Dylan Jayatilaka, 1999
!
! This library is free software; you can redistribute it and/or
! modify it under the terms of the GNU Library General Public
! License as published by the Free Software Foundation; either
! version 2 of the License, or (at your option) any later version.
!
! This library is distributed in the hope that it will be useful,
! but WITHOUT ANY WARRANTY; without even the implied warranty of
! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
! Library General Public License for more details.
!
! You should have received a copy of the GNU Library General Public
! License along with this library; if not, write to the
! Free Software Foundation, Inc., 59 Temple Place - Suite 330,
! Boston, MA  02111-1307, USA.
!
! $Id: run_int.foo 3505 2011-06-26 18:16:54Z dylan_ $

program run_INT

   implicit none

   i :: INT

   ! Macro to create Tonto system object
   ! Initialise MPI parallel stuff too.
   TONTO_CREATE

   ! Initialise standard I/O files.
   ! Always have this.
   std_time.start_timing
 ! stdin.create_stdin;   stdin.open
   stdout.create_stdout ! ; stdout.open
   stderr.create_stderr; stderr.open

   ! Banner
   stdout.text("=============")
   stdout.text("INT exercises")
   stdout.text("=============")
   stdout.flush

   ! Print
   i = 0

   stdout.show("i (normal format)           = ",i)
   stdout.show("i (binary format)           = ",trim(i.to_bit_string))
   stdout.show("bit_size(i)                 = ",bit_size(i))

   i = i.set_bit_at(0)                      
   stdout.show("i.set_bit_at(0)             = ",trim(i.to_bit_string))

   i = i.set_bit_at(5)                      
   stdout.show("i.set_bit_at(5)             = ",trim(i.to_bit_string))

   i = i.clear_bit_at(5)                    
   stdout.show("i.clear_bit_at(5)           = ",trim(i.to_bit_string))

   i = i.set_bits_at([1,2,3,4])           
   stdout.show("i.set_bits_at(1..4)         = ",trim(i.to_bit_string))
   stdout.show("i.has_all_bits_set_at(1..4) = ",i.has_all_bits_set_at([1,2,3,4]))

   i = i.move_bits_left(2)           
   stdout.show("i.move_bits_left(2)         = ",trim(i.to_bit_string))
   stdout.show("i.has_all_bits_set_at(2..5) = ",i.has_all_bits_set_at([2,3,4,5]))
   stdout.show("i.has_all_bits_set_at(4..7) = ",i.has_all_bits_set_at([4,5,6,7]))
   stdout.show("i.has_any_bits_set_at(1..4) = ",i.has_any_bits_set_at([1,2,3,4]))
   stdout.show("i.has_any_bits_set_at(4..7) = ",i.has_any_bits_set_at([4,5,6,7]))

   i = i.clear_bits_at([4,5,6,7])
   stdout.show("i.clear_bits_at(4..7)       = ",trim(i.to_bit_string))
   stdout.show("i.has_any_bits_set_at(4..7) = ",i.has_any_bits_set_at([4,5,6,7]))

   i = i.set_bit_at(10)                     
   stdout.show("i.set_bit_at(10)            = ",trim(i.to_bit_string))

   i = i.set_bit_at(20)                     
   stdout.show("i.set_bit_at(20)            = ",trim(i.to_bit_string))

   i = i.set_bit_at(30)                     
   stdout.show("i.set_bit_at(30)            = ",trim(i.to_bit_string))

   i = i.set_bit_at(31)                     
   stdout.show("i.set_bit_at(31)            = ",trim(i.to_bit_string))

   i = i.bits_from(2,9)                    
   stdout.show("i.bits_from(2,9)             = ",trim(i.to_bit_string))

   ! Clean-up files
   TEXTFILE:destroy(stderr)
   TEXTFILE:destroy(stdout)
 ! TEXTFILE:destroy(stdin)

   ! Memory report
   TONTO_REPORT

   ! Clean-up tonto system
   TONTO_DESTROY

end
