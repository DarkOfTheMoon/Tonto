! Copyright (C) Dylan Jayatilaka 2012
!
! This library is free software; you can redistribute it and/or
! modify it under the terms of the GNU Library General Public
! License as published by the Free Software Foundation; either
! version 2 of the License, or (at your option) any later version.
!
! This library is distributed in the hope that it will be useful,
! but WITHOUT ANY WARRANTY; without even the implied warranty of
! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
! Library General Public License for more details.
!
! You should have received a copy of the GNU Library General Public
! License along with this library; if not, write to the
! Free Software Foundation, Inc., 59 Temple Place - Suite 330,
! Boston, MA  02111-1307, USA.
!
! $Id: run_archive.foo 2445 2003-12-17 08:44:42Z awhitton $

program run_TEST_RANDOM_NUMBER

   implicit none

   harvest :: VEC{REAL}(5)

   ! Macro to create Tonto system object
   ! Initialise MPI parallel stuff too.
   TONTO_CREATE

   ! Initialise standard I/O files.
   ! Always have this.
   std_time.start_timing
   stdout.create_stdout
   stderr.create_stderr

   ! Parallel?
   stdout.show("Parrallel job = ",tonto.is_parallel)

   ! Get the harvest, send to all
   if      (tonto.this_processor==0) then
      call random_number(harvest)
   end
   PARALLEL_BROADCAST(harvest,0)

   ! Check if the parallel jobs have same random numbers
   if      (tonto.this_processor==0) then
      write(*,*) "Five random numbers (processor 0):"
      write(*,*) harvest
   else if (tonto.this_processor==1) then
      write(*,*) "Five random numbers (processor 1):"
      write(*,*) harvest
   end

   ! Clean-up files
   TEXTFILE:destroy(stderr)
   TEXTFILE:destroy(stdout)

   ! Memory report
   TONTO_REPORT

   ! Clean-up tonto system
   TONTO_DESTROY

end
