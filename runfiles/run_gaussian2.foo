! Testing numerical integration

program run_GAUSSIAN2

   implicit none

   g :: GAUSSIAN2 
   S :: MAT{REAL}*
   Bx,By,Bz :: MAT{REAL}*
   Mxx,Mxy,Mxz :: MAT{REAL}*
   Myx,Myy,Myz :: MAT{REAL}*
   Mzx,Mzy,Mzz :: MAT{REAL}*

   ! Create Tonto system
   TONTO_CREATE

   ! Open standard files
   stdout.create_stdout; stdout.open
   stderr.create_stderr; stderr.open
 
   ! Set gaussian data
   GAUSSIAN_DATA:set_indices(l_max=4)

   ! Define gaussian pair
   g.a.set_l(2)
   g.a.set_pos([TENTH,TENTH,TENTH])
   g.a.set_ex(ONE)
   g.b.set_l(2)
   g.b.set_pos([ZERO,ZERO,ZERO])
   g.b.set_ex(ONE)

   stdout.set_real_style("f")
   stdout.set_real_width(20)
   stdout.set_real_precision(12)

   ! Output
   stdout.flush
   stdout.text("The gaussian pair ...")
   g.put 
   stdout.flush

   ! Make overlap integrals
   S.create(g.a.n_comp,g.b.n_comp)
   g.make_overlap_ints(S)

   ! Put overlap integrals
   stdout.flush
   stdout.text("Overlap integrals between the two gaussians:")
   stdout.flush
   stdout.put(S)

   ! Make magnetic field integrals
   Bx.create(g.a.n_comp,g.b.n_comp)
   By.create(g.a.n_comp,g.b.n_comp)
   Bz.create(g.a.n_comp,g.b.n_comp)
   g.make_magnetic_jp_ints(Bx,By,Bz,[ONE,ONE,ONE])

   ! Put magnetic field integrals
   stdout.flush
   stdout.text("Magnetic field current integrals Bi between")
   stdout.text("the two gaussian evaluated at (1,1,1) :")
   stdout.flush
   stdout.text("Bx:"); stdout.put(Bx)
   stdout.text("By:"); stdout.put(By)
   stdout.text("Bz:"); stdout.put(Bz)

   ! Make magnetic field spin integrals
   Mxx.create(g.a.n_comp,g.b.n_comp); Mxy.create(g.a.n_comp,g.b.n_comp); Mxz.create(g.a.n_comp,g.b.n_comp)
   Myx.create(g.a.n_comp,g.b.n_comp); Myy.create(g.a.n_comp,g.b.n_comp); Myz.create(g.a.n_comp,g.b.n_comp)
   Mzx.create(g.a.n_comp,g.b.n_comp); Mzy.create(g.a.n_comp,g.b.n_comp); Mzz.create(g.a.n_comp,g.b.n_comp)
   g.make_magnetic_S_ints(Mxx,Mxy,Mxz,Myx,Myy,Myz,Mzx,Mzy,Mzz,[ONE,ONE,ONE])
 
   ! Put nuclear attraction integrals
   stdout.flush
   stdout.text("Magnetic field spin integrals")
   stdout.text("Mxx:"); stdout.put(Mxx); stdout.text("Mxy:"); stdout.put(Mxy); stdout.text("Mxz:"); stdout.put(Mxz)
   stdout.text("Myx:"); stdout.put(Myx); stdout.text("Myy:"); stdout.put(Myy); stdout.text("Myz:"); stdout.put(Myz)
   stdout.text("Mzx:"); stdout.put(Mzx); stdout.text("Mzy:"); stdout.put(Mzy); stdout.text("Mzz:"); stdout.put(Mzz)

   ! Clean
   GAUSSIAN_DATA:destroy_data
   Mzz.destroy; Mzy.destroy; Mzx.destroy
   Myz.destroy; Myy.destroy; Myx.destroy
   Mxz.destroy; Mxy.destroy; Mxx.destroy
   Bz.destroy; By.destroy; Bx.destroy
   S.destroy

   ! Memory report
   TONTO_REPORT

   ! Destroy standard files
   TEXTFILE:destroy(stderr)
   TEXTFILE:destroy(stdout)

   ! Destroy Tonto system
   TONTO_DESTROY

end
