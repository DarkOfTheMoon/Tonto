#!/bin/sh

#-------------------------------------------------------------------------
#
#  >>> Update module file
#
# This script is used to update a module file $1 in the modules directory
# only if it is different from the module file $1 in the new_modules
# directory. In this way, object files which depend on $1 need not
# be recompiled needlessly!
#
# (c) dylan jayatilaka, university of western australia, 1999-2001
# (c) daniel grimwood, university of western australia, 2000-2001
#
# $Id$
#
#-------------------------------------------------------------------------

orig_name=$1
name=$1
if [ -z $name ]; then
echo "Need the module file name as an argument to this script"
exit 1
fi
if [ ! -d new_modules ]; then
  mkdir new_modules
fi
if [ ! -d modules ]; then
  mkdir modules
fi

if [ ! -f new_modules/$name ]; then
   if [ -f $name ]; then
     /bin/mv $name new_modules
   else 
      set name = `echo $name:r | tr a-z A-Z`.mod
      if [ -f $name ]; then
         /bin/mv $name new_modules
      fi
   fi
fi

if [ -f new_modules/$name ]; then
 if [ -f modules/$name ]; then
  if [ -n `cmp new_modules/$name modules/$name` ]; then
   /bin/rm -f new_modules/$name        # this is for nice compilers
   echo "Keeping the old $name file"
  elif [ `cmp -l new_modules/$name modules/$name | perl -ne 'next if /^    2[567]/; print' | wc -l` -eq 0 ]; then
   /bin/rm -f new_modules/$name        # this is for compaq compiler
   echo "Keeping the old $name file"
  else
   /bin/mv -f new_modules/$name modules/$name
   echo "Updating the old $name file"
  fi
 else
  /bin/mv -f new_modules/$name modules/$name
  echo "Creating a new $name file"
 fi
else
 echo "Error: module file new_modules/$orig_name does not exist!"
 exit 1
fi
