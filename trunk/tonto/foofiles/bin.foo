!---------------------------------------------------------------------------
!
! BIN: methods which apply to logical (BIN) variables
!
! Copyright (C) Dylan Jayatilaka, 2011
!
! This library is free software; you can redistribute it and/or
! modify it under the terms of the GNU Library General Public
! License as published by the Free Software Foundation; either
! version 2 of the License, or (at your option) any later version.
!
! This library is distributed in the hope that it will be useful,
! but WITHOUT ANY WARRANTY; without even the implied warranty of
! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
! Library General Public License for more details.
!
! You should have received a copy of the GNU Library General Public
! License along with this library; if not, write to the
! Free Software Foundation, Inc., 59 Temple Place - Suite 330,
! Boston, MA  02111-1307, USA.
!
! $Id: bin.foo dylan_ $
!---------------------------------------------------------------------------

module BIN

   implicit none

contains

!  =============
!  String widths
!  =============
   
   no_of_fields_per_value result (res) ::: always_pure
   ! Returns the number of fields used to print a "self".
      self :: IN
      res :: INT
      if (FALSE) res = transfer(self,res)
      res = 1
   end 

   str_length result (res) ::: get_from(INTRINSIC, FMT=>*), pure
   ! Returns the minimal string length.
   ! Note: for non-real and non-complex only
   end

!  =================
!  String conversion
!  =================

   to_str result (string) ::: get_from(INTRINSIC, FMT=>*), always_pure
   ! Change self to a string of minimal length
   end

   to_str(format,left_justify) result (string) ::: get_from(INTRINSIC), always_pure
   ! Change self to a "string" using the specified fortran "format".
   end

   to_str(width,left_justify) result (string) ::: get_from(INTRINSIC, STYLE=>L), always_pure
   ! Change self to a string with specified "width".
   end

end
