!---------------------------------------------------------------------------
!
! UNITNUMBER:  Keeps a list of the unit numbers used for I/O.
! (c) Daniel Grimwood, 1998
!
! Whenever you use a new unit, use "get" to get a unique number for it.
! When finished with the unit, use "free" so that the number becomes
! available for later use.
!
! The numbers start at UNITNUMBER_STARTING_UNIT, not one.
!
! $Id$
!
!---------------------------------------------------------------------------
module UNITNUMBER

  use TYPES
  use SYSTEM
  use IVEC

# include "macros"
# include "unitnumber.int"

!   type unitnumber_type
!
!  INT :: unit
!   ! The unit number
!
!   end

  IVEC, PTR :: unitlist DEFAULT_NULL

contains

  get(unit) [leaky]
  ! Returns the next unused unit number, and updates the unitlist.
    INT :: unit,oldlength
    if (associated(unitlist)) then
      oldlength=size(unitlist)
      unit=UNITNUMBER_STARTING_UNIT-1
      do
        unit=unit+1
        if (any(unitlist == unit)) then
          cycle
        else
          exit
        end
      end
      unitlist.expand(oldlength+1)
      unitlist(oldlength+1)=unit
    else
      unitlist.create(1)
      unit=UNITNUMBER_STARTING_UNIT
      unitlist(1)=unit
    end
  end

  free(unit) [leaky]
  ! Removes the unit number from the unitlist.
    INT, IN :: unit
    INT :: oldlength,position,i
    oldlength=size(unitlist)
    if (oldlength==1) then
      unitlist.destroy
    else
      do i=1,oldlength
        if (unitlist(i)==unit) then
          position=i
          exit
        else
          cycle
        end
      end
      do i=position,oldlength-1
        unitlist(i)=unitlist(i+1)
      end
      unitlist.shrink(oldlength-1)
    end
  end

end
