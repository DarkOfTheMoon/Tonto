program run_shell4

   use TYPES
   use SYSTEM
   use INPUT
   use OUTPUT
   use MAT
   use MAT4
   use SHELL
   use SHELL4
   use TIME

#include "macros"

   implicit none

   SHELL4, PTR :: s
   INPUT, PTR :: in
   OUTPUT, PTR :: out
   INT :: n_a,n_b,n_c,n_d
   MAT4, PTR :: I

   s.create 

   in.create("shell4.in")
   in.open
   out.create("shell4.out")
   out.open

   s%a%n_cc = 1
   s%b%n_cc = 1
   s%c%n_cc = 1
   s%d%n_cc = 1
   s%a%ex.create(1)
   s%b%ex.create(1)
   s%c%ex.create(1)
   s%d%ex.create(1)
   s%a%cc.create(1)
   s%b%cc.create(1)
   s%c%cc.create(1)
   s%d%cc.create(1)
   s%a%cc(1) = ONE
   s%b%cc(1) = ONE
   s%c%cc(1) = ONE
   s%d%cc(1) = ONE

   in.read(s%a%l)
   in.read(s%b%l)
   in.read(s%c%l)
   in.read(s%d%l)

   n_a = (s%a%l+1)*(s%a%l+2)/2
   n_b = (s%b%l+1)*(s%b%l+2)/2
   n_c = (s%c%l+1)*(s%c%l+2)/2
   n_d = (s%d%l+1)*(s%d%l+2)/2
   s%a%n_comp = n_a
   s%b%n_comp = n_b
   s%c%n_comp = n_c
   s%d%n_comp = n_d

   in.read(s%a%pos)
   in.read(s%b%pos)
   in.read(s%c%pos)
   in.read(s%d%pos)
   in.read(s%a%ex(1))
   in.read(s%b%ex(1))
   in.read(s%c%ex(1))
   in.read(s%d%ex(1))

   I.create(n_a,n_b,n_c,n_d)
   s.get_eri(I)

   out.put(I)

!  INPUT, PTR :: ina,inb,inc,ind
!  VEC(3) :: pos_a,pos_b,pos_c,pos_d
!  SHELL, PTR :: sha,shb,shc,shd
!  SHELL4, PTR :: sh
!  MAT4, PTR :: abcd
!  SHELLDATA :: data
!  INT :: maxl,i,aub,bub,cub,dub
!  TIME :: timer,total

!  total.start
!  std_output.create("shell4.out")
!  std_output.open
!  std_system.report(std_output)
!  std_output.flush
!  total.set_output_file(std_output)

!  sha.create 
!  shb.create 
!  shc.create 
!  shd.create 

!  ina.create("shell1a.in")
!  ina.open
!  inb.create("shell1b.in")
!  inb.open
!  inc.create("shell1c.in")
!  inc.open
!  ind.create("shell1d.in")
!  ind.open

!  ina.read(pos_a)
!  inb.read(pos_b)
!  inc.read(pos_c)
!  ind.read(pos_d)
!  sha.read_from_input(ina)
!  shb.read_from_input(inb)
!  shc.read_from_input(inc)
!  shd.read_from_input(ind)
!  sha.unnormalise
!  shb.unnormalise
!  shc.unnormalise
!  shd.unnormalise

!  maxl=max(sha%l+shb%l,shc%l+shd%l)
!  data.init(l=maxl)

!  sh.create
!  sh.set(sha,shb,shc,shd,pos_a,pos_b,pos_c,pos_d)
!  std_output.put(sh)
!  
!  aub=data.halfloneltwo(sha%l)
!  bub=data.halfloneltwo(shb%l)
!  cub=data.halfloneltwo(shc%l)
!  dub=data.halfloneltwo(shd%l)
!  abcd.create(aub,bub,cub,dub)
!!  std_output.put("Timing electron repulsion integrals",flush=1)
!!  timer.start
!!  do i=1,10
!    sh.get_eri(abcd)
!!  end
!!  timer.stop
!  std_output.flush
!  std_output.set_dbl_width(20)
!  std_output.set_dbl_precision(10)
!  std_output.set_dbl_style("es")
!  std_output.put(abcd)
!  sh.destroy
!  abcd.destroy
!  sha.destroy
!  shb.destroy
!  shc.destroy
!  shd.destroy
!  ina.destroy
!  inb.destroy
!  inc.destroy
!  ind.destroy
!  data.done
!  std_system.report(std_output)
!  std_output.flush
!  std_output.put("Total time :",flush=1,left_justify=TRUE)
!  total.stop

end 
