! $Id$
!---------------------------------------------------------------------------
! IRREPVEC: For representing an array of irreps
!---------------------------------------------------------------------------
module IRREPVEC

   use TYPES
   use SYSTEM
   use IRREP

   implicit none         

#  include "macros"
#  include "irrepvec.int"

contains

   create(dim)
   ! Create an irrepvec
      PTR :: self
      INT :: dim
      nullify(self)
      allocate(self(dim))
      ADD_MEM(dim*IRREP_SIZE)
      .nullify_ptr_part
   end

   destroy
   ! Destroy an irrepvec
      PTR :: self
      if (.destroyed) return
      .destroy_ptr_part
      DELETE_MEM(size(self)*IRREP_SIZE)
      deallocate(self)
   end

   nullify_ptr_part
   ! Nullify the pointer parts of an irrepvec
      INT :: i
      do i = 1,size(self)
         self(i).nullify_ptr_part
      end 
   end

   destroy_ptr_part
   ! Destroy the pointer parts of an irrepvec
      INT :: i
      do i = 1,size(self)
         self(i).destroy_ptr_part
      end 
   end

   created result(res)
   ! Returns true if self has been created
      PTR :: self
      BIN :: res
      res = associated(self)
   end

   destroyed result(res)
   ! Returns true if self has *not* been created
      PTR :: self
      BIN :: res
      res = NOT associated(self)
   end

end
