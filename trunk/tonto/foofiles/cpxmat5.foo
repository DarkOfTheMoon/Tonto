!---------------------------------------------------------------------------
!
!  CMAT5: Complex 5 dimensional matrices
!
!  (c) dylan jayatilaka, 1998
!
! $Id$
!---------------------------------------------------------------------------
module CMAT5

   use SYSTEM

   implicit none         

#include "macros"
#include "cmat5.int"

contains

   create(dim1,dim2,dim3,dim4,dim5)
   ! Create a cmat5 object
      PTR :: self
      INT :: dim1,dim2,dim3,dim4,dim5
      nullify(self)
      allocate(self(dim1,dim2,dim3,dim4,dim5))
      ADD_MEM(dim1*dim2*dim3*dim4*dim5*CDBL_SIZE)
   end

   create(lb1,ub1,lb2,ub2,lb3,ub3,lb4,ub4,lb5,ub5)
   ! Create a cmat5 object with the specified bounds
      PTR :: self
      INT :: lb1,lb2,lb3,lb4,lb5
      INT :: ub1,ub2,ub3,ub4,ub5
      nullify(self)
      allocate(self(lb1:ub1,lb2:ub2,lb3:ub3,lb4:ub4,lb5:ub5))
      ADD_MEM((ub1-lb1+1)*(ub2-lb2+1)*(ub3-lb3+1)*(ub4-lb4+1)*(ub5-lb5+1)*CDBL_SIZE)
   end

   destroy
   ! Destroy a cmat5 object
      PTR :: self
      if (.destroyed) return
      DELETE_MEM(size(self)*CDBL_SIZE)
      deallocate(self)
   end

   created result(res)
   ! Returns true if self has been created
      PTR :: self
      BIN :: res
      res = associated(self)
   end

   destroyed result(res)
   ! Returns true if self has *not* been created
      PTR :: self
      BIN :: res
      res = NOT associated(self)
   end

end
