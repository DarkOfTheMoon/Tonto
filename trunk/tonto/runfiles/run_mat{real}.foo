! Copyright (C) Dylan Jayatilaka, 1999
!
! This library is free software; you can redistribute it and/or
! modify it under the terms of the GNU Library General Public
! License as published by the Free Software Foundation; either
! version 2 of the License, or (at your option) any later version.
!
! This library is distributed in the hope that it will be useful,
! but WITHOUT ANY WARRANTY; without even the implied warranty of
! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
! Library General Public License for more details.
!
! You should have received a copy of the GNU Library General Public
! License along with this library; if not, write to the
! Free Software Foundation, Inc., 59 Temple Place - Suite 330,
! Boston, MA  02111-1307, USA.
!
! $Id: run_mat{real}.foo 3396 2009-12-10 02:17:06Z dylan_ $

program run_MAT{REAL}

   implicit none

   x,u,m,mm :: MAT{REAL}*
   uu,u0 :: VEC{REAL}*
   axis :: VEC{REAL}(3)
   angle :: REAL

   TONTO_CREATE

   std_time.start_timing
   stdout.create_stdout; stdout.open

   x.create(9,9)
   u.create(15,15)
   stdout.text("u:")
   call random_number(u)
   stdout.put(u)

   u.put_blocks_to(x,[3,1,5],3)
   stdout.text("x:")
   stdout.put(x)

   x.destroy
   x.create(6,6)
   u.put_sub_blocks_to(x,[3,1,5],3,2,1)
   stdout.text("x:")
   stdout.put(x)


!   u.create(3,3)
!   m.create(3,3)
!
!   uu.create(6)
!   u0.create(6)
!   mm.create(6,6)
!
!   stdout.text("u:")
!   call random_number(u)
!   u.symmetrize
!   stdout.put(u)
!
!   stdout.text("flat u:")
!   u.compress_to_triangle(uu)
!   stdout.put(uu,"column")
!   u0 = uu
!
!   stdout.text("m:")
!   call random_number(axis)
!   axis.normalise
!   call random_number(angle)
!   m.to_3x3_rotation_matrix(axis,angle) 
!   stdout.put(m)
!
!   stdout.text("change basis, new u:")
!   u.change_basis_using(m)
!   stdout.put(u)
!
!   stdout.text("flat new u:")
!   u.compress_to_triangle(uu)
!   stdout.put(uu)
!
!   stdout.text("tensor mm:")
!   mm.to_tensor_change_basis_of(m)
!   stdout.put(mm)
!
!   stdout.text("tensor m change of basis:")
!   uu = matmul(mm,u0)
!   stdout.put(uu)

   TEXTFILE:destroy(stdout)

   TONTO_DESTROY

end

