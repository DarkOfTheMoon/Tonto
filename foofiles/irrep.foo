!---------------------------------------------------------------------------
!
! IRREP: For representing an irreducible representation of a pointgroup
!
! $Id$
!---------------------------------------------------------------------------
module IRREP

   use TYPES
   use SYSTEM
   use VEC
   use MAT3

   implicit none         

#  include "macros"
#  include "irrep.int"

!   type irrep_type
!
!   CHR(4) :: label
!   ! Irrep label
!
!   INT :: dimension
!   ! Irrep dimension
!
!   VEC* :: character
!   ! Characters for the irrep
!
!   MAT3* :: mat
!   ! Representation matrices for the irrep
!
!   end

contains

   create
   ! Create an irrep
      PTR :: self
      nullify(self)
      allocate(self)
      ADD_MEM(IRREP_SIZE)
      .nullify_ptr_part
   end

   destroy
   ! Destroy an irrep
      PTR :: self
      if (.destroyed) return
      .destroy_ptr_part
      DELETE_MEM(IRREP_SIZE)
      deallocate(self)
   end

   nullify_ptr_part
   ! Nullify the pointer parts of an irrep
      nullify(.character)
      nullify(.mat)
   end

   destroy_ptr_part
   ! Destroy the pointer parts of an irrep
      .character.destroy
      .mat.destroy
   end

   created result(res)
   ! Returns true if self has been created
      PTR :: self
      BIN :: res
      res = associated(self)
   end

   destroyed result(res)
   ! Returns true if self has *not* been created
      PTR :: self
      BIN :: res
      res = NOT associated(self)
   end

end
