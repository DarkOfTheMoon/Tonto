! Copyright (C) Dylan Jayatilaka, 1999
!
! This library is free software; you can redistribute it and/or
! modify it under the terms of the GNU Library General Public
! License as published by the Free Software Foundation; either
! version 2 of the License, or (at your option) any later version.
!
! This library is distributed in the hope that it will be useful,
! but WITHOUT ANY WARRANTY; without even the implied warranty of
! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
! Library General Public License for more details.
!
! You should have received a copy of the GNU Library General Public
! License along with this library; if not, write to the
! Free Software Foundation, Inc., 59 Temple Place - Suite 330,
! Boston, MA  02111-1307, USA.
!
! $Id$

program run_QUADRATURE

  implicit none

  q :: QUADRATURE*
  res :: REAL

  tonto.initialize

  stdout.create_stdout
  stdout.set_real_width(20)
  stdout.set_real_precision(8)
  stdout.set_real_style("e")
  stdout.set_n_fields(5)

  tonto.set_error_output_file(stdout)

  q.create

  q.set_kind("adaptive_simpson")

  q.set_limits([ZERO,PI])
  res = q.adaptive_integrate(QUADRATURE:test_sin)
  stdout.show("res = ",res)

  q.set_limits([ZERO,ONE])
  res = q.adaptive_integrate(QUADRATURE:test_x2)
  stdout.show("res = ",res)

  q.set_limits([ZERO,ONE])
  res = q.adaptive_integrate(QUADRATURE:test_x3)
  stdout.show("res = ",res)

  q.set_limits([ZERO,ONE])
  res = q.adaptive_integrate(QUADRATURE:test_x4)
  stdout.show("res = ",res)

  q.set_kind("adaptive_ewing_41")
  q.set_limits([-TWO,TWO])
  q.set_accuracy(0.0001d0)
  res = q.adaptive_integrate(QUADRATURE:test_gauss)
  stdout.show("ewing = ",res)
  stdout.show("npt = ",q.n_points)

  q.set_kind("adaptive_genz_malik_80")
  q.set_limits([-TWO,TWO])
  q.set_accuracy(0.0001d0)
  res = q.adaptive_integrate(QUADRATURE:test_gauss)
  stdout.show("Genz-Malik = ",res)
  stdout.show("npt = ",q.n_points)

  q.set_kind("adaptive_hammer_stroud_58")
  q.set_limits([-TWO,TWO])
  q.set_accuracy(0.0001d0)
  res = q.adaptive_integrate(QUADRATURE:test_gauss)
  stdout.show("Hammer-Stroud = ",res)
  stdout.show("npt = ",q.n_points)

  q.set_kind("adaptive_tyler_53")
  q.set_limits([-TWO,TWO])
  q.set_accuracy(0.0001d0)
  res = q.adaptive_integrate(QUADRATURE:test_gauss)
  stdout.show("Tyler = ",res)
  stdout.show("npt = ",q.n_points)

!  q.set_kind("adaptive_trapezoid")
!  q.set_limits([-TWO,TWO])
!  q.set_accuracy(0.001d0)
!  res = q.adaptive_integrate(QUADRATURE:test_gauss)
!  stdout.show("res = ",res)
!  stdout.show("npt = ",q.n_points)

  tonto.report

end
