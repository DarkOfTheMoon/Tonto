program run_GAUSSIAN2

   implicit none

   g :: GAUSSIAN2
   S,Jx,Jy,Jz :: MAT{REAL}*

   ! Create Tonto system
   TONTO_CREATE

   ! Start timer
   std_time.start_timing

   ! Open standard files
   stdin.create_stdin;   stdin.open
   stdout.create_stdout; stdout.open
   stderr.create_stderr; stderr.open

   ! Set gaussian data
   GAUSSIAN_DATA:set_indices(l_max=4)

   ! Define gaussian pair
   stdout.flush
   stdout.text("Define a gaussian pair ...")

   ! s function at origin
   g.a.set_l(2)
   g.a.set_position([TENTH,TENTH,TENTH])
   g.a.set_exponents(ONE)

   ! p function at origin
   g.b.set_l(2)
   g.b.set_position([ZERO,ZERO,ZERO])
   g.b.set_exponents(ONE)

   g.put                    ! Output to "stdout"
   stdout.flush             ! Observe dot notation access to "g"

   ! Overlap integrals
   S.create(g.a.n_comp,g.b.n_comp)

   ! Make overlap integrals
   stdout.flush
   stdout.text("The overlap integrals between the")
   stdout.text("two gaussian functions :")
   stdout.flush
   S.create(g.a.n_comp,g.b.n_comp)
   g.make_overlap_ints(S)
   stdout.put(S)

   ! Current integrals
   Jx.create(g.a.n_comp,g.b.n_comp)
   Jy.create(g.a.n_comp,g.b.n_comp)
   Jz.create(g.a.n_comp,g.b.n_comp)

   ! Make current integrals
   stdout.flush
   stdout.text("The Jp integrals (p=x,y,z) between the")
   stdout.text("two gaussian functions, c=(0,0,1) :")
   stdout.flush
   g.make_magnetic_jp_ints(Jx,Jy,Jz,[ONE,ONE,ONE])
   stdout.text("Jx:"); stdout.put(Jx)
   stdout.text("Jy:"); stdout.put(Jy)
   stdout.text("Jz:"); stdout.put(Jz)

   ! Make current integrals
   stdout.flush
   stdout.text("The Jp integrals (p=x,y,z) between the")
   stdout.text("two gaussian functions, c=(0,0,-1) :")
   stdout.flush
   g.make_magnetic_jp_ints(Jx,Jy,Jz,[ONE,ONE,-ONE])
   stdout.text("Jx:"); stdout.put(Jx)
   stdout.text("Jy:"); stdout.put(Jy)
   stdout.text("Jz:"); stdout.put(Jz)
 
   ! Nuclear attraction integrals
   stdout.flush
   stdout.text("The nuclear attaction integrals between the")
   stdout.text("gaussian pair, Z=1 nucleus at (0,1,0) :")
   stdout.flush
   g.make_nuclear_attraction_ints(S,c=[ZERO,ONE,ZERO])
   stdout.put(S)

   ! Memory report
   TONTO_REPORT

   ! Destroy std files
   TEXTFILE:destroy(stderr)
   TEXTFILE:destroy(stdout)
   TEXTFILE:destroy(stdin)

   ! Destroy Tonto system
   TONTO_DESTROY

end
